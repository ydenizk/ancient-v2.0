// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Region {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  title     String
  urlTitle  String @unique
  desc1     String?
  desc2     String?
  imageUrl  String?
  mapImg     String?
  places    Place[]
}

model Place {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime      @default(now())
  name         String     @unique//aspendos
  city         String //city of spot
  slogan       String //HOME OF THE BEST PERSERVED THEATER
  headline     String //hero da short explanation
  hp1          String //history paragraph 
  hp2          String //history paragraph 
  hp3          String //history paragraph 
  subTitle     String //BUILDINGS AND ASPENDOS THEATER
  hp4          String //history paragraph 
  hp5          String? //history paragraph 
  hp6          String? //history paragraph 
  heroImageUrl String //hero Ä±mage
  textImageUrl String //in text
  p1           String //how to visit p
  gallery      Image[] // New relation to the Image model (one-to-many)
  brochureUrl  String? //brochure url
  mapUrl     String 
  unesco       Boolean //unesco url
  nearbyPlaces NearbyPlace[]
  regionId     String        @db.ObjectId
  region       Region        @relation(fields: [regionId], references: [id])
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  url       String // URL of the image (could be from Cloudinary)
  title     String? // title of the image
  placeId   String   @db.ObjectId // Foreign key to the Place model
  place     Place    @relation(fields: [placeId], references: [id])
}

model NearbyPlace {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  placeId   String   @db.ObjectId // Reference to the main Place
  distance  Float // Distance in kilometers
  name      String
  place     Place    @relation(fields: [placeId], references: [id])
}

model Newsletter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  email     String
}
